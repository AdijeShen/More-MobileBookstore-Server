package com.pb.services.userRelated;

import com.pb.services.common.CommService;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;

import com.pb.entity.Book;
import com.pb.entity.Model;
import com.pb.entity.User;
import com.pb.json.BookJson;
import com.pb.services.common.CommService;
@Service(value = "userService")
public class UserService extends CommService {


	public  List<User> findAll() {
		List<User> list = baseDAO.findByHQL("from User");
		return list;
	}
	public List<User> findPasswordByName(String name){
		List<User> list = baseDAO.findByHQL("from User m where m.username = ? ",new Object[] {name } );
		return list;
	}
	
	public List<User> findEmailByUsername(String name){
		List<User> list = baseDAO.findByHQL("from User user where user.username = ? ",new Object[] {name } );
		return list;
	}
	public void updatePassword(String newpsd,User one){
		one.setPassword(newpsd);
		baseDAO.update(one);
	}
	
	/**
	 * 登录
	 * @param phonenumber
	 * @param password
	 * @return
	 */
	public List<User> login(String phonenumber,String password){
		List<User> list = baseDAO.findByHQL("FROM User user WHERE user.phone = ? AND user.password = ? ", new Object[]{phonenumber,password});
		return list;
	}
	
	/**
	 * 注册
	 * @param phonenumber
	 * @param password
	 * @return
	 */
	public List<User> register(String phonenumber, String password){
		List<User> result = new ArrayList<User>();
		List<User> test = baseDAO.findByHQL("FROM User user WHERE user.phone = ? ", new Object[]{phonenumber});
		if(test.size()!=0){
			return result;
		}
		User user = new User();
		user.setPhone(phonenumber);
		user.setPassword(password);
		user.setScore(100);
		baseDAO.save(user);
		result = baseDAO.findByHQL("FROM User user WHERE user.phone = ? AND user.password = ? ", new Object[]{phonenumber,password});
		return result;
	}
	
	public  List<BookJson> getBooksByISBN(String isbn) {
		List<BookJson> book = baseDAO.findBySQLForVO("SELECT book_id as bookId,isbn as isbn,bookstore.store_describe as storeDescribe,store_id as storeId,"
					+"user_id as userId,user_name as userName,store_name as storeName,headPic as headPic,book.`describe` as describes "
					+"FROM user NATURAL JOIN bookstore NATURAL JOIN store NATURAL JOIN book "
					+"WHERE user.user_id = bookstore.owner_id AND bookstore.store_id = store.store_id AND book.book_id = store.book_id "
					+"AND book.isbn = ?;",BookJson.class, new Object[]{isbn});
		return book;
	}
	
	/**
	 * 修改昵称	
	 * @param name
	 * @param id
	 * @return
	 */
	public String updatename(String name,String id){
		List<User> temp = baseDAO.findByHQL("from User user where user.userId = ?",new Object[]{Integer.parseInt(id)});
		if(temp.size()==0) return "";
		User user = temp.get(0);
		user.setUserName(name);
		baseDAO.save(user);
		return name;
	}
}
