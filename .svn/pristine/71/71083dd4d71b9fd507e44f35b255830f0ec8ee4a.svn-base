package com.pb.services.book;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Service;

import com.pb.entity.Book;
import com.pb.entity.History;
import com.pb.entity.User;
import com.pb.json.BookJson;
import com.pb.services.common.CommService;

@Service(value = "bookService")
public class BookService extends CommService {

	/**
	 * 根据isbn获取所有书架上的书籍
	 * 
	 * @param isbn
	 * @return
	 */
	public List<BookJson> getBooksByISBN(String isbn) {
		List<BookJson> book = baseDAO.findBySQLForVO("SELECT book_id AS bookId,isbn AS isbn,describes AS describes,"
				+ "store_id AS storeId,user_id AS userId,user_name AS userName,"
				+ "store_name AS storeName,headPic AS headPic,store_describe AS storeDescribe,"
				+ "author AS author,title AS title,publisher AS publisher,image AS bookImageURI,"
				+ "url AS douBanURI,binding AS binding,price AS price,page AS page,"
				+ "rating AS rating FROM book NATURAL JOIN bookstore NATURAL JOIN `user`" + "WHERE book.isbn = ?; ",
				BookJson.class, new Object[] { isbn });

		return book;
	}

	/**
	 * 借书逻辑：在History中添加一条 “借入” 记录，一条“借出”，同时删除Book上的书
	 * @param book_id
	 * @param userid
	 * @return
	 */
	public String borrowBook(int book_id,int userid) {
		List<Book> book = baseDAO.findByHQL("from Book book where book.bookId = ?",new Object[]{book_id});
		if(book.size()==0)return "0001";//该书不存在
		else{
			List<User> user = baseDAO.findByHQL("from User user where user.userId = ?",new Object[]{userid});
			if(user.size()==0){
				return "0002";//重新登陆后尝试
			}
			
			//"借入"记录
			History h1 = new History();
			h1.setOperType("借入");
			SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//设置日期格式
			h1.setOperTime(df.format(new Date()));
			h1.setUser(user.get(0));
			h1.setBookName(book.get(0).getTitle());
			baseDAO.save(h1);
			
			//"借出"记录
			List<User> user2 = baseDAO.findByHQL("from User user where user.bookstore.storeId = ?",new Object[]{book.get(0).getBookstore().getStoreId()});	
			if(user2.size()==0){
				return "0003";//系统出错
			}
			History h2 = new History();
			h2.setOperType("借出");
			h2.setOperTime(df.format(new Date()));
			h2.setUser(user.get(0));
			h2.setUser(user2.get(0));
			h2.setBookName(book.get(0).getTitle());
			baseDAO.save(h2);
			
			//"删除"书架上的书籍
			baseDAO.delete(book.get(0));
			return "0000";
		}
	}
}
